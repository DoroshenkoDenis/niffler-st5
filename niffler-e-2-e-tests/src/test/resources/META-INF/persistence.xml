<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
             version="2.1">
    <persistence-unit name="niffler-st5" transaction-type="RESOURCE_LOCAL">
        <class>guru.qa.niffler.data.entity.AuthorityEntity</class>
        <class>guru.qa.niffler.data.entity.UserAuthEntity</class>
        <class>guru.qa.niffler.data.entity.UserEntity</class>
        <class>guru.qa.niffler.data.entity.FriendshipEntity</class>
        <class>guru.qa.niffler.data.entity.SpendEntity</class>
        <class>guru.qa.niffler.data.entity.CategoryEntity</class>
    </persistence-unit>

</persistence>

        <!-- Файл persistence.xml используется провайдером JPA для управления единицами сохранения
             и их ассоциированными классами, источниками данных и другими настройками.
             Он обычно располагается в директории META-INF Java-проекта и используется провайдером JPA
             для конфигурации слоя сохранения.

    Элемент <persistence> используется для определения конфигурации для Java Persistence API (JPA) в Java-приложении.
    Он является центральной частью конфигурации для слоя сохранения и используется для указания настроек и параметров для провайдера JPA.

Элемент <persistence> включает следующие элементы:

- Пространство имен и местоположение схемы:
    xmlns: Определяет пространство имен для XML-документа. Для JPA 2.1 и позднее это http://xmlns.jcp.org/xml/ns/persistence.
    xsi:schemaLocation: Определяет местоположение XML-схемы, которая определяет структуру файла persistence.xml.
    Для JPA 2.1 и позднее это http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd.

- Единицы сохранения:
    <persistence-unit>: Определяет единицу сохранения, которая является совокупностью классов, управляемых провайдером JPA.
     Каждая единица сохранения имеет уникальное имя и может иметь свои настройки конфигурации.

- Провайдер сохранения:
    <provider>: Определяет провайдера JPA, который будет управлять единицами сохранения.
     Это может быть конкретный провайдер, например, EclipseLink или Hibernate.

- Источник данных:
    <jta-data-source> или <non-jta-data-source>: Определяет имя JNDI для источника данных, который является или не является соответствующим Java Transaction API (JTA).
     Это используется для подключения к базе данных.

- Свойства:
    <properties>: Позволяет указать дополнительные настройки конфигурации, специфические для провайдера JPA.
     Эти настройки могут включать в себя настройки для генерации схемы, кэширования и других провайдер-специфических функций.
     (!!!) В нашем проекте настройки задаются в классе EmProvider, в котором мы указываем необходимый persistenceUnitName (niffler-st5)
-->